# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

input ConfigInput {
    url: String
    targetLanguage: CreateLanguageInput
    sourceLanguage: CreateLanguageInput
    translationModel: TranslationModelInput
}

input TranslationModelInput {
    type: String
}
input CreateLanguageInput {
    name: String!
    code: String!
}

type TranslationConfig @model {
    id: ID!
    url: String!
    targetLanguage: Language @hasOne  #you dont always need a target language, for simplicity sake we'll keep it
    sourceLanguage: Language @hasOne
    translationModel: TranslationModel
}

type BlogPost @model{
    id: ID!
    originalPost: BlogPost @hasOne
    language: Language! @hasOne
    title: String!
    authors: [String]!
    content: [String]
    translationModel: TranslationModel @hasOne
}

type Rating @model {
    id: ID!
    stars: Int
    blogPost: BlogPost! @hasOne
}

type Language @model {
    name: String!
    code: String! @primaryKey  #Language code: ie. "en" for English, "tr" for Turkish
}

type TranslationModel @model {
    id: ID!
    name: String!
}

type html {
    file: String
}

type Query {
    getStepFunctionInvoker(input: ConfigInput): lhsAndRhs
    translate(input: ConfigInput): BlogPost
    getBlogPostParsed(url: String): html
}

type lhsAndRhs {
	lhs: String
	rhs: String
}
